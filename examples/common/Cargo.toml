[package]
name = "wgpu-example"
version.workspace = true
authors.workspace = true
edition.workspace = true
description = "Common example code"
homepage.workspace = true
repository.workspace = true
keywords.workspace = true
license.workspace = true
autotests = false
publish = false

[lib]

[features]
webgl = ["hal", "wgpu/webgl"]

[dependencies]
bitflags.workspace = true
bytemuck = { workspace = true, features = ["derive"] }
cfg-if.workspace = true
glam.workspace = true
ddsfile.workspace = true
futures-intrusive.workspace = true
env_logger.workspace = true
image.workspace = true
log.workspace = true
naga.workspace = true
hal.workspace = true
noise = { workspace = true }
obj.workspace = true
pollster.workspace = true
png.workspace = true
nanorand = { workspace = true, features = ["wyrand"] }
wasm-bindgen-test.workspace = true
winit.workspace = true # for "halmark" example
wgt.workspace = true
wgpu.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
async-executor.workspace = true
hal = { workspace = true }
nv-flip.workspace = true

[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook.workspace = true
console_log.workspace = true
js-sys.workspace = true
wasm-bindgen.workspace = true
wasm-bindgen-futures.workspace = true
hal = { workspace = true, optional = true }
# We need these features in the framework examples and tests
web-sys = { workspace = true, features = [
    "Location",
    "Blob",
    "RequestInit",
    "RequestMode",
    "Request",
    "Response",
    "WebGl2RenderingContext",
    "CanvasRenderingContext2d"
] }
